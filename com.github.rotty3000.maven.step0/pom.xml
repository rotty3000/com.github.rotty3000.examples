<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<artifactId>com.github.rotty3000.maven.step0</artifactId>
	<groupId>com.github.rotty3000</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<!-- Start with the latest BND version. -->
		<bnd.version>5.1.1</bnd.version>

		<!-- Then set some typical build defaults like source encoding and Java version.. -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
	</properties>

	<modules>
		<module>com.github.rotty3000.maven.step1</module>
		<module>com.github.rotty3000.maven.step2</module>
		<module>com.github.rotty3000.maven.step3</module>
		<module>com.github.rotty3000.maven.step4</module>
		<module>com.github.rotty3000.maven.step5</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<!-- This builds OSGi jars. -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<executions>
						<execution>
							<id>bnd-process</id>
							<goals>
								<goal>bnd-process</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- This dynamically calculates all the things we need to run our code. -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-resolver-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<failOnChanges>false</failOnChanges>
						<reportOptional>false</reportOptional>
						<includeDependencyManagement>true</includeDependencyManagement>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>resolve</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- This generates an executable jar from the above calculation. -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-export-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<attach>true</attach>
						<failOnChanges>false</failOnChanges>
						<includeDependencyManagement>true</includeDependencyManagement>
						<resolve>false</resolve>
					</configuration>
					<executions>
						<execution>
							<id>export</id>
							<goals>
								<goal>export</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- The rest is typical maven/java project stuff. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.1</version>
					<executions>
						<execution>
							<id>default-jar</id>
							<configuration>
								<archive>
									<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
								</archive>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<!-- Couple other things bound to each module. -->
		<plugins>
			<!-- This verifies semantic versioning of our APIs. -->
			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-baseline-maven-plugin</artifactId>
				<version>${bnd.version}</version>
				<configuration>
					<failOnMissing>false</failOnMissing>
				</configuration>
				<executions>
					<execution>
						<id>baseline</id>
						<goals>
							<goal>baseline</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- This lets you _run_ bndrun files. -->
			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-run-maven-plugin</artifactId>
				<version>${bnd.version}</version>
				<configuration>
					<includeDependencyManagement>true</includeDependencyManagement>
				</configuration>
			</plugin>
			<!-- This enforces the minimum Java and Maven versions. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<version>3.2.5</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.annotation</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<!-- Setup some shared dependencies -->
		<dependencies>
			<!-- Select a framework -->
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.osgi</artifactId>
				<version>3.15.0</version>
				<scope>runtime</scope>
			</dependency>
			<!-- This is the jar which gives us the nice logging support for logback and transitively brings all we need. -->
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.logback</artifactId>
				<version>1.0.2</version>
				<scope>runtime</scope>
			</dependency>
			<!-- This is the gogo BOM which has all the gogo parts we need. -->
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.gogo.bom</artifactId>
				<version>1.0.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>apache.snapshots</id>
			<name>Maven Plugin Snapshots</name>
			<url>http://repository.apache.org/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

</project>